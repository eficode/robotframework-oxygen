name: Tests

on:
  push:
  pull_request:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  PYTHON: ['python310', 'python311', 'python312']
  RF_VERSION: ['3.2.2', '4.1', '6.1.1']  #TODO add RF5

jobs:

  # Running tests on Windows under Windows Subsystem for Linux (WSL)
  windows:
    strategy:
      fail-fast: false
      matrix:
        python: ${{ env.PYTHON }}
        rfVersion: ${{ env.RF_VERSION }}
    runs-on: windows-latest
    name: Windows (${{ matrix.python }}, robotframework-${{ matrix.rfVersion }})
    defaults:
      run:
        shell: wsl-bash {0}
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2
      - name: Setup Windows Subsystem for Linux
        uses: Vampire/setup-wsl@v1
        with:
          # Using Ubuntu to setup WSL
          distribution: Ubuntu-20.04
          additional-packages:
            dos2unix
      - name: Install Nix
        run: |
            # Nix installer does not support root installation we need a user
            useradd test -m

            # Create /nix folder with proper permissions
            # This is required because otherwise installer gets stuck most likely at running sudo
            install -d -m755 -o test -g test /nix

            # Download Nix installer
            sudo -iu test curl -o ./install-nix.sh -L https://nixos.org/nix/install

            # Run installer as single user installation and we do not need a channel
            sudo -iu test sh ./install-nix.sh --no-daemon --no-channel-add
      - name: Run tests
        run: |
            # Change line endings
            dos2unix default.nix
            # Run the tests in project directory where default.nix resides
            # We need login shell for that so that .profile is getting read
            sudo -iu test sh -c "nix-build $PWD --argstr python ${{ matrix.python }} --argstr rfVersion ${{ matrix.rfVersion }}"
            exit $(cat /home/test/result/exitCode)

  linux:
    strategy:
      fail-fast: false
      matrix:
        python: ${{ env.PYTHON }}
        rfVersion: ${{ env.RF_VERSION }}
    runs-on: ubuntu-latest
    name: Linux (${{ matrix.python }}, robotframework-${{ matrix.rfVersion }})
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2
      - name: Install Nix
        uses: cachix/install-nix-action@v13
      - name: Run tests
        run: |
          nix-build --argstr python ${{ matrix.python }} --argstr rfVersion ${{ matrix.rfVersion }}
          exit $(cat ./result/exitCode)

  macos:
    strategy:
      fail-fast: false
      matrix:
        python: ${{ env.PYTHON }}
        rfVersion: ${{ env.RF_VERSION }}
    runs-on: macos-latest
    name: MacOS (${{ matrix.python }}, robotframework-${{ matrix.rfVersion }})
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2
      - name: Install Nix
        uses: cachix/install-nix-action@v13
      - name: Run tests
        run: |
          nix-build --argstr python ${{ matrix.python }} --argstr rfVersion ${{ matrix.rfVersion }}
          exit $(cat ./result/exitCode)
